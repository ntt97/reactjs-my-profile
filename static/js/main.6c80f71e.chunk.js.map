{"version":3,"sources":["images/avatar.jpg","images.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","images","avatar","require","App","renderHeader","react_default","a","createElement","className","alt","src","esm","Provider","value","color","size","md_index_esm","href","target","rel","style","text-decoration","index_esm","renderBody","moment","b","years","diff","add","months","concat","height","go_index_esm","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c80f71e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.2af81a06.jpg\";","const images = {\n  avatar: require('./images/avatar.jpg'),\n}\n\nexport default images\n","import moment from 'moment';\nimport React, { Component } from 'react';\nimport { IconContext } from 'react-icons';\nimport { FaGraduationCap, FaSkype, FaUser, FaYoutube } from 'react-icons/fa';\nimport { GoProject, GoRepoForked } from 'react-icons/go';\nimport { MdApps, MdEmail, MdPhone, MdVpnKey, MdWork } from 'react-icons/md';\nimport './App.css';\nimport './AppMobile.css';\nimport images from './images';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className={'viewPort'}>\n        {this.renderHeader()}\n        {this.renderBody()}\n      </div>\n    );\n  }\n\n  renderHeader = () => {\n    return (\n      <div className={'viewHeader'}>\n        <img alt={'my avatar'} className={'avatar'} src={images.avatar} />\n\n        <div className={'viewInfoHeader'}>\n          <span className={'textNameHeader'}>Nguyen Thanh To</span>\n          <span className={'textMajorHeader'}>Front-End developer</span>\n          <span className={'textMajorHeader'}>Ho Chi Minh City, Viet Nam</span>\n        </div>\n\n        <div className={'viewContact'}>\n          <div className={'viewWrapItemContact'}>\n            <div className={'btnItemContact'}>\n              <IconContext.Provider value={{ color: 'white', size: '15px' }}>\n                <MdEmail />\n              </IconContext.Provider>\n              <a\n                href={'mailto:tranquangduy7994@gmail.com'}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ 'text-decoration': 'none' }}\n              >\n                <span className={'textItemContact'}>\n                  nthanhtodev97@gmail.com\n                </span>\n              </a>\n            </div>\n          </div>\n\n          <div className={'viewWrapItemContact'}>\n            <div className={'btnItemContact'}>\n              <IconContext.Provider value={{ color: 'white', size: '15px' }}>\n                <FaSkype />\n              </IconContext.Provider>\n              <a\n                href={'skype:live:bae347cea73dcf75?chat'}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ 'text-decoration': 'none' }}\n              >\n                <span className={'textItemContact'}>live:bae347cea73dcf75</span>\n              </a>\n            </div>\n          </div>\n\n          <div className={'viewWrapItemContact'}>\n            <div className={'btnItemContact'}>\n              <IconContext.Provider value={{ color: 'white', size: '15px' }}>\n                <MdPhone />\n              </IconContext.Provider>\n              <span className={'textItemContact'}>0358983660</span>\n            </div>\n          </div>\n\n          <div className={'viewWrapItemContact'}>\n            <div className={'btnItemContact'}>\n              <IconContext.Provider value={{ color: 'white', size: '15px' }}>\n                <FaYoutube />\n              </IconContext.Provider>\n              <a\n                href={'https://www.youtube.com'}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ 'text-decoration': 'none' }}\n              >\n                <span className={'textItemContact'}>My channel</span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  renderBody = () => {\n    let a = moment();\n    let b = moment([2020, 6, 1]);\n\n    let years = a.diff(b, 'year');\n    b.add(years, 'years');\n\n    let months = a.diff(b, 'months');\n    b.add(months, 'months');\n\n    return (\n      <div className={'viewBody'}>\n        {/*Career Profile*/}\n        <div className={'viewWrapItemBody'}>\n          <div className={'viewWrapTitleItemBody'}>\n            <IconContext.Provider value={{ color: '#f99930', size: '20px' }}>\n              <FaUser />\n            </IconContext.Provider>\n            <span className={'textTitleItemBody'}>Career Profile</span>\n          </div>\n          <div className={'viewWrapContentItemBody'}>\n            <span\n              className={'textContentItemBody1'}\n            >{`Front-End developer with ${years} years ${months} months experience. I work with React Native, React js`}</span>\n            <span className={'textContentItemBody1'}>\n              Having ability to build the backend with common functions, full\n              basic flow to communicate between backend and client\n            </span>\n            <span className={'textContentItemBody1'}>\n              Learning new languages or platforms quickly with a positive\n              attitude. Can join in all process of product development from\n              initialize to store release\n            </span>\n          </div>\n        </div>\n\n        <div className={'breakLine'} />\n\n        {/*Work Experience*/}\n        <div className={'viewWrapItemBody'}>\n          <div className={'viewWrapTitleItemBody'}>\n            <IconContext.Provider value={{ color: '#f99930', size: '20px' }}>\n              <MdWork />\n            </IconContext.Provider>\n            <span className={'textTitleItemBody'}>Experience</span>\n          </div>\n          <div className={'viewWrapContentItemBody'}>\n            <div style={{ height: '10px' }} />\n            <span className={'textContentItemBody'}>\n              Fresher Software Engineer at EXE Corp\n            </span>\n            <span className={'textContentItemBody2'}>June 2020 - Present</span>\n          </div>\n        </div>\n\n        <div className={'breakLine'} />\n\n        {/*My product*/}\n        <div className={'viewWrapItemBody'}>\n          <div className={'viewWrapTitleItemBody'}>\n            <IconContext.Provider value={{ color: '#f99930', size: '20px' }}>\n              <MdApps />\n            </IconContext.Provider>\n            <span className={'textTitleItemBody'}>My Product</span>\n          </div>\n          <div className={'viewWrapContentItemBody'}>\n            <span className={'textContentItemBody1'}>\n              My own product with Full-Stack operations\n            </span>\n            <div style={{ height: '10px' }} />\n            <span className={'textContentItemBody'}>App Shop Shoes</span>\n            <span\n              className={'textContentItemBody1'}\n              href={'https://moga-app.web.app'}\n            >\n              React Native, Redux, Firebase, Nodejs , MongoDb\n            </span>\n            <div style={{ height: '10px' }} />\n            <span className={'textContentItemBody'}>Web Food Binh Dinh</span>\n            <span\n              className={'textContentItemBody1'}\n              href={'https://moga-app.web.app'}\n            >\n              JavaSpring MVC, SQL server\n            </span>\n            <div style={{ height: '10px' }} />\n            <span className={'textContentItemBody'}>Shop Shoes Admin</span>\n            <span\n              className={'textContentItemBody1'}\n              href={'https://moga-app.web.app'}\n            >\n              React js\n            </span>\n            <div style={{ height: '10px' }} />\n          </div>\n        </div>\n\n        <div className={'breakLine'} />\n\n        {/*Repository*/}\n        <div className={'viewWrapItemBody'}>\n          <div className={'viewWrapTitleItemBody'}>\n            <IconContext.Provider value={{ color: '#f99930', size: '20px' }}>\n              <GoRepoForked />\n            </IconContext.Provider>\n            <span className={'textTitleItemBody'}>Repository</span>\n          </div>\n          <div className={'viewWrapContentItemBody'}>\n            <span className={'textContentItemBody'}>Github</span>\n            <a\n              className={'textContentItemBody1'}\n              href={'https://github.com/ntt97'}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              https://github.com/ntt97\n            </a>\n\n            <div style={{ height: '10px' }} />\n          </div>\n        </div>\n\n        <div className={'breakLine'} />\n\n        {/*Key Skills*/}\n        <div className={'viewWrapItemBody'}>\n          <div className={'viewWrapTitleItemBody'}>\n            <IconContext.Provider value={{ color: '#f99930', size: '20px' }}>\n              <MdVpnKey />\n            </IconContext.Provider>\n            <span className={'textTitleItemBody'}>Key Skills</span>\n          </div>\n          <div className={'viewWrapContentItemBody'}>\n            <span className={'textContentItemBody1'}>React Native - good</span>\n            <span className={'textContentItemBody1'}>ReactJS - good</span>\n            <span className={'textContentItemBody1'}>\n              Firebase - intermediate\n            </span>\n            <span className={'textContentItemBody1'}>\n              Backend - intermediate\n            </span>\n            <span className={'textContentItemBody1'}>Git - good</span>\n            <span className={'textContentItemBody1'}>\n              English - intermediate\n            </span>\n            <div style={{ height: '10px' }} />\n            <span className={'textContentItemBody1'}>\n              NodeJS (Auth, RESTful API, SocketIO)\n            </span>\n            <span className={'textContentItemBody1'}>\n              Firebase (Authentication, Database, Functions, Storage, Hosting,\n              Cloud Messaging)\n            </span>\n          </div>\n        </div>\n\n        {/*Project*/}\n        <div className={'breakLine'} />\n\n        <div className={'viewWrapItemBody'}>\n          <div className={'viewWrapTitleItemBody'}>\n            <IconContext.Provider value={{ color: '#f99930', size: '20px' }}>\n              <GoProject />\n            </IconContext.Provider>\n            <span className={'textTitleItemBody'}>Projects</span>\n          </div>\n          <div className={'viewWrapContentItemBody'}>\n            <span className={'textContentItemBody'}>React Native</span>\n            <div className={'viewWrapChildContent'}>\n              <span className={'textContentItemBody1'}>\n                &#9679; Vas Parent Portal (product, contribution rate 80%) - The\n                app to connect teacher with parent (React Native, Firebase,Redux\n                Saga , Typescript, notification...){' '}\n                <a href={'https://parentreports.vas.edu.vn/'}>IOS</a>\n                {' / '}\n                <a\n                  href={\n                    'https://play.google.com/store/apps/details?id=com.exe.school.vas.teacher'\n                  }\n                >\n                  Android\n                </a>\n              </span>\n              <span className={'textContentItemBody1'}>\n                &#9679; Vas Teacher (product, contribution rate 100%) - The app\n                to connect teacher with parent (React Native, Firebase,Redux\n                Saga , Typescript, notification...){' '}\n                <a\n                  href={\n                    'https://apps.apple.com/tr/app/vas-teacher/id1537618215'\n                  }\n                >\n                  IOS\n                </a>\n                {' / '}\n                <a\n                  href={\n                    'https://play.google.com/store/apps/details?id=com.exe.school.vas.teacher'\n                  }\n                >\n                  Android\n                </a>\n              </span>\n              <span className={'textContentItemBody1'}>\n                &#9679; LHG for Doctors (product, contribution rate 100%) (React\n                Native, Firebase,Redux Saga , Typescript, notification...){' '}\n                <a\n                  href={\n                    'https://apps.apple.com/am/app/lhg-for-doctors/id1547414609'\n                  }\n                >\n                  IOS\n                </a>\n                {' / '}\n                <a\n                  href={\n                    'https://play.google.com/store/apps/details?id=com.limhealthgo.doctor'\n                  }\n                >\n                  Android\n                </a>\n              </span>\n              <span className={'textContentItemBody1'}>\n                &#9679; Lim Health Go (product, contribution rate 100%) (React\n                Native, Firebase,Redux Saga , Typescript, notification...){' '}\n                <a\n                  href={\n                    'https://apps.apple.com/us/app/lim-health-go/id1547414301'\n                  }\n                >\n                  IOS\n                </a>\n                {' / '}\n                <a\n                  href={\n                    'https://play.google.com/store/apps/details?id=com.limhealthgo.patient'\n                  }\n                >\n                  Android\n                </a>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className={'breakLine'} />\n        {/*Education*/}\n        <div className={'viewWrapItemBody'}>\n          <div className={'viewWrapTitleItemBody'}>\n            <IconContext.Provider value={{ color: '#f99930', size: '20px' }}>\n              <FaGraduationCap />\n            </IconContext.Provider>\n            <span className={'textTitleItemBody'}>Education</span>\n          </div>\n          <div className={'viewWrapContentItemBody'}>\n            <span className={'textContentItemBody'}>\n              Posts and Telecommunications Institute of Technology (PTIT)\n            </span>\n            <span className={'textContentItemBody2'}>2016 - 2021</span>\n            <div style={{ height: '10px' }} />\n          </div>\n        </div>\n\n        <div className={'breakLine'} />\n        <div style={{ height: '30px' }} />\n      </div>\n    );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}